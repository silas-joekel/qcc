@prefix ex: <http://example.com/> .
@prefix qcc: <http://qudt.org/qudt-constraint-components/> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix unit: <http://qudt.org/vocab/unit/> .

ex:
  a owl:Ontology ;
  owl:imports qcc: ;
.

ex:MaterialShape
  a sh:NodeShape ;
  sh:targetClass ex:Material ;
  sh:property [
    sh:path rdfs:label ;
    sh:minCount 1 ;
    sh:datatype rdf:langString ;
    sh:uniqueLang true ;
  ] ;
  sh:property [
    sh:path ex:density ;
    sh:class qudt:Quantity ;
    qcc:hasQuantityKind quantitykind:Density ;
    qcc:hasUnit unit:GM-PER-DeciM3 ;
    qcc:unitIn (
      unit:GM-PER-DeciM3   # Gram per dm³
      unit:GM-PER-CentiM3  # Gram per cm³
      unit:OZ-PER-IN3      # Ounces per in³
    ) ;
    qcc:maxQuantityValues 2 ;
  ] ;
.

################################################################################
##                                                                            ##
## The following section is a copy of qcc and not actually part of the shapes ##
##                                                                            ##
################################################################################
@prefix qcc: <http://qudt.org/qudt-constraint-components/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
#@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
#@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
#@prefix unit: <http://qudt.org/vocab/unit/> .

qcc:
  a owl:Ontology ;
  owl:imports sh: ;
.

qcc:UnitInConstraintComponent
  a sh:ConstraintComponent ;
  rdfs:comment "A constraint component that can be used to express a constraint for a quantity so that for all quantity values the units needs to be one of the given list of allowed units." ;
  rdfs:label "Unit in constraint component" ;
  sh:message "The unit of quantity values must match any of {$unitIn}" ;
  sh:parameter qcc:UnitInConstraintComponent-unitIn ;
  sh:nodeValidator [
    a sh:SPARQLSelectValidator ;
    sh:select """SELECT $this
WHERE {
	FILTER NOT EXISTS {
    $this <http://qudt.org/schema/qudt/hasUnit>|(<http://qudt.org/schema/qudt/quantityValue>/<http://qudt.org/schema/qudt/hasUnit>) $hasUnit .
  }
}""" ;
    sh:select """SELECT $this
WHERE {
	FILTER NOT EXISTS {
      $this <http://qudt.org/schema/qudt/hasUnit>|(<http://qudt.org/schema/qudt/quantityValue>/<http://qudt.org/schema/qudt/hasUnit>) ?allowedUnit .
		GRAPH $shapesGraph {
			$unitIn <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>*/<http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?allowedUnit .
		}
	}
}""" ;
  ] ;
  sh:propertyValidator [
    a sh:SPARQLSelectValidator ;
    sh:select """SELECT $this ?value
WHERE {
  $this $PATH ?value .
	FILTER NOT EXISTS {
      ?value <http://qudt.org/schema/qudt/hasUnit>|(<http://qudt.org/schema/qudt/quantityValue>/<http://qudt.org/schema/qudt/hasUnit>) ?allowedUnit .
		GRAPH $shapesGraph {
			$unitIn <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>*/<http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?allowedUnit .
		}
	}
}""" ;
  ] ;
.
qcc:UnitInConstraintComponent-unitIn
  a sh:Parameter ;
  sh:path qcc:unitIn ;
  sh:description "The unit of quantity values must match any of given units." ;
  sh:name "unit in" ;
.
qcc:unitIn
  a rdf:Property ;
  rdfs:comment "Specifies a constraint that the unit of a quantity value must match one of the given units." ;
  rdfs:label "unit in" ;
  rdfs:range qudt:Unit ;
.
